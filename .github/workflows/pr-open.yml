name: Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io

jobs:
  # # Uncomment to view GitHub context object
  # view-context:
  #   # https://docs.github.com/en/actions/learn-github-actions/contexts
  #   name: View GitHub Context
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Echo GitHub context
  #       uses: satackey/action-js-inline@v0.0.2
  #       with:
  #         script: |
  #           const github = require('@actions/github');
  #           console.log(JSON.stringify(github, null, 2));

  build-backend:
    name: Backend Image Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.event.number }}-backend
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REPO_LOCATION=
            NG_BUILD_CONFIG=${{ vars.NG_BUILD_CONFIG }}

  tests-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: npm ci
        run: npm ci

      - name: lint
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: npm run lint

      - name: unit test
        run: npm run test:cov

      - name: Report code coverage
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          title: Backend coverage report
          delete-old-comments: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

  tests-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: npm ci
        run: npm ci
        working-directory: ./ui

      - name: lint
        run: npm run lint
        working-directory: ./ui
